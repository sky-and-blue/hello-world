<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itany.netClass.dao.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.itany.netClass.entity.Comment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="context" property="context" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="resource_id" property="resourceId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, context, create_date, user_id, resource_id, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.itany.netClass.entity.CommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.itany.netClass.entity.CommentExample" >
    delete from t_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.itany.netClass.entity.Comment" keyProperty="id" useGeneratedKeys="true">
    insert into t_comment (id, context, create_date, 
      user_id, resource_id, status
      )
    values (#{id,jdbcType=INTEGER}, #{context,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{userId,jdbcType=INTEGER}, #{resourceId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.itany.netClass.entity.Comment" >
    insert into t_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="context != null" >
        context,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="resourceId != null" >
        resource_id,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="context != null" >
        #{context,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="resourceId != null" >
        #{resourceId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.itany.netClass.entity.CommentExample" resultType="java.lang.Integer" >
    select count(*) from t_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_comment
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.context != null" >
        context = #{record.context,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.resourceId != null" >
        resource_id = #{record.resourceId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_comment
    set id = #{record.id,jdbcType=INTEGER},
      context = #{record.context,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=INTEGER},
      resource_id = #{record.resourceId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.itany.netClass.entity.Comment" >
    update t_comment
    <set >
      <if test="context != null" >
        context = #{context,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="resourceId != null" >
        resource_id = #{resourceId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.itany.netClass.entity.Comment" >
    update t_comment
    set context = #{context,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      resource_id = #{resourceId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <resultMap id="ComentUserPraise" type="com.itany.netClass.entity.Comment">
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="context" property="context" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="resource_id" property="resourceId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />

    <association property="user" javaType="com.itany.netClass.entity.User">
      <result column="nickname" property="nickname"></result>
    </association>

  </resultMap>
  <select id="selectByCondition"  parameterType="com.itany.netClass.vo.CommentQuery" resultMap="ComentUserPraise">
   SELECT
	c.id,
	context,
	c.create_date,
	user_id,
	resource_id,
	c.status,
	nickname
FROM
	t_comment c
LEFT JOIN t_user u ON c.user_id = u.id
    <where>
      <if test="contextLike != null">
        and context like concat(concat('%', #{contextLike}), '%')
      </if>
      <if test="nickNameLike != null">
        and nickname like concat(concat('%', #{nickNameLike}), '%')
      </if>
      <if test="status != null and status != '-1' ">
        and c.status = #{status}
      </if>
      <if test="resourceId != null">
        and resource_id = #{resourceId}
        and c.status != 2
      </if>
      <if test="createDateBegin != null">
        and create_date &gt;= #{createDateBegin}
      </if>
      <if test="createDateEnd != null">
        and create_date &lt;= #{createDateEnd}
      </if>
    </where>
    order by c.id
  </select>
  <select id="findCommentByResourceIds"  parameterType="string" resultMap="ComentUserPraise">
   SELECT
	c.id,
	context,
	c.create_date,
	user_id,
	resource_id,
	c.status,
	nickname
FROM
	t_comment c
LEFT JOIN t_user u ON c.user_id = u.id
    <where>
      <if test="cids != null">
        resource_id in (${cids})
      </if>
      and c.status = 0
    </where>
    order by c.create_date desc
  </select>
  
</mapper>